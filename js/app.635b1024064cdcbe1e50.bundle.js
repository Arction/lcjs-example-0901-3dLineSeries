(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,a)=>{const s=a(809),{lightningChart:i,AxisTickStrategies:n,Themes:r}=s,{createProgressiveTraceGenerator:o}=a(27),d=i().Chart3D({}).setBoundingBox({x:1,y:.5,z:.4});d.getDefaultAxisX().setTitle("Axis X"),d.getDefaultAxisY().setTitle("Axis Y"),d.getDefaultAxisZ().setTitle(""),d.getDefaultAxisZ().setTickStrategy(n.Empty);const l=[{name:"Series A",dataAmount:50},{name:"Series B",dataAmount:50},{name:"Series C",dataAmount:50}];d.getDefaultAxisX().setInterval(0,l.reduce(((e,t)=>Math.max(e,t.dataAmount)),0),!1,!0),d.getDefaultAxisZ().setInterval(-1,1+l.reduce(((e,t,a)=>Math.max(e,a)),0),!1,!0);let m=0;l.forEach(((e,t)=>{const a=e.name||"",s=e.dataAmount||100,i=e.z||t,n=d.addPointLineSeries().setName(a);o().setNumberOfPoints(s).generate().toPromise().then((e=>e.map((e=>({x:e.x,y:e.y,z:i}))))).then((e=>{setInterval((()=>{const t=e.splice(0,3);t.length>0&&(n.add(t),m+=t.length,d.setTitle(`3D Line Series (${m} data points)`))}),30)}))})),d.addLegendBox().setAutoDispose({type:"max-width",maxWidth:.3}).add(d)}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);