(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(89),n=a(863),{lightningChart:i,AxisTickStrategies:r,Themes:o}=s,{createProgressiveTraceGenerator:d}=n,m=i({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Chart3D({theme:o[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setBoundingBox({x:1,y:.5,z:.4});m.getDefaultAxisX().setTitle("Axis X"),m.getDefaultAxisY().setTitle("Axis Y"),m.getDefaultAxisZ().setTitle(""),m.getDefaultAxisZ().setTickStrategy(r.Empty);const h=[{name:"Series A",dataAmount:50},{name:"Series B",dataAmount:50},{name:"Series C",dataAmount:50}];m.getDefaultAxisX().setInterval({start:0,end:h.reduce(((e,t)=>Math.max(e,t.dataAmount)),0)}),m.getDefaultAxisZ().setInterval({start:-1,end:1+h.reduce(((e,t,a)=>Math.max(e,a)),0)});let l=0;h.forEach(((e,t)=>{const a=e.name||"",s=e.dataAmount||100,n=e.z||t,i=m.addPointLineSeries().setName(a);d().setNumberOfPoints(s).generate().toPromise().then((e=>e.map((e=>({x:e.x,y:e.y,z:n}))))).then((e=>{setInterval((()=>{const t=e.splice(0,3);t.length>0&&(i.add(t),l+=t.length,m.setTitle(`3D Line Series (${l} data points)`))}),30)}))})),m.addLegendBox().setAutoDispose({type:"max-width",maxWidth:.3}).add(m)}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);